---
// src/components/SoundToggle.astro
---

<button id="sound-toggle" aria-label="Toggle sound effects">
    <svg class="icon sound-on" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
        <path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>
    </svg>
    <svg class="icon sound-off" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
        <line x1="23" y1="9" x2="17" y2="15"></line>
        <line x1="17" y1="9" x2="23" y2="15"></line>
    </svg>
</button>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        import { toggleSound, isSoundEnabled, playSound } from '../utils/sound.js';
        const btn = document.getElementById('sound-toggle');
        const htmlEl = document.documentElement;

        function update() {
            htmlEl.classList.toggle('sound-enabled', isSoundEnabled());
        }
        update();

        btn.addEventListener('click', async () => {
            const enabled = toggleSound();
            update();
            if (enabled) await playSound('click');
        });
    });
</script>

<style>
    #sound-toggle {
        background: none;
        border: 1px solid var(--color-border-light);
        color: var(--color-text-light);
        padding: 0.5em;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
        z-index: 1000;
        position: relative;
    }

    #sound-toggle:hover {
        background-color: var(--color-card-bg-light);
        box-shadow: var(--shadow-sm);
    }

    #sound-toggle .icon {
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    #sound-toggle .sound-on {
        opacity: 1;
        transform: scale(1);
    }

    html.sound-enabled #sound-toggle .sound-off {
        opacity: 0;
        transform: scale(0);
        position: absolute;
    }

    html:not(.sound-enabled) #sound-toggle .sound-on {
        opacity: 0;
        transform: scale(0);
        position: absolute;
    }

    html:not(.sound-enabled) #sound-toggle .sound-off {
        opacity: 1;
        transform: scale(1);
        position: relative;
    }
</style>

