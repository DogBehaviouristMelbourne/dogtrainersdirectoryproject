name: 🚀 Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📋 Install dependencies
      run: npm ci

    - name: 🔍 Print environment info
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Environment variables (filtered):"
        printenv | grep -E "(PUBLIC_|STRIPE_|VITE_)" || echo "No environment variables found"

    - name: 🔍 Lint code
      run: npm run lint
      continue-on-error: true

    - name: 🧪 Run tests
      run: npm run test
      continue-on-error: true

    - name: 🔨 Build project
      run: |
        echo "🔨 Starting production build with enhanced error reporting..."
        export NODE_OPTIONS="--trace-warnings --unhandled-rejections=strict"
        export DEBUG="astro:*"
        npm run build 2>&1 | tee build.log || {
          echo "❌ Build failed. Debugging information:"
          echo "📋 Last 50 lines of build output:"
          tail -50 build.log
          echo "🔍 Environment check:"
          echo "NODE_VERSION: $(node --version)"
          echo "NPM_VERSION: $(npm --version)"
          echo "🗂️ Project structure check:"
          ls -la src/pages/api/ || echo "No API directory found"
          ls -la src/lib/ || echo "No lib directory found"
          echo "📦 Dependencies status:"
          npm list --depth=0 | head -20
          echo "⚠️ Build failed - see logs above for details"
          exit 1
        }
      env:
        PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
        PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        STRIPE_ANNUAL_PRICE_ID: ${{ secrets.STRIPE_ANNUAL_PRICE_ID }}
        STRIPE_MONTHLY_PRICE_ID: ${{ secrets.STRIPE_MONTHLY_PRICE_ID }}
        VITE_ADMIN_KEY: ${{ secrets.VITE_ADMIN_KEY }}

    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  accessibility-audit:
    name: ♿ Accessibility Audit
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📋 Install dependencies
      run: npm ci

    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: 🚀 Start preview server
      run: |
        npm install -g serve
        serve -s dist -l 3000 &
        sleep 5
      
    - name: ♿ Run accessibility tests
      run: |
        npx @axe-core/cli http://localhost:3000 --exit || echo "Accessibility issues found - review needed"
        npx @axe-core/cli http://localhost:3000/trainers --exit || echo "Accessibility issues found - review needed"
        npx @axe-core/cli http://localhost:3000/contact --exit || echo "Accessibility issues found - review needed"

  deploy-preview:
    name: 🌐 Deploy Preview
    runs-on: ubuntu-latest
    needs: [build-and-test, accessibility-audit]
    if: github.event_name == 'pull_request'

    steps:
    - name: 💬 Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚀 Preview deployment will be available on Vercel once this PR is merged!'
          })

  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-test, accessibility-audit]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: ✅ Deployment Ready
      run: |
        echo "🎉 All checks passed!"
        echo "🚀 Vercel will automatically deploy this to production"
        echo "📊 Monitor deployment at: https://vercel.com/dashboard"
